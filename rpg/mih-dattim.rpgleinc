     /**
      * This file is part of i5/OS Programmer's Toolkit.
      *
      * Copyright (C) 2010, 2011  Junlei Li.
      *
      * i5/OS Programmer's Toolkit is free software: you can redistribute it and/or modify
      * it under the terms of the GNU General Public License as published by
      * the Free Software Foundation, either version 3 of the License, or
      * (at your option) any later version.
      *
      * i5/OS Programmer's Toolkit is distributed in the hope that it will be useful,
      * but WITHOUT ANY WARRANTY; without even the implied warranty of
      * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      * GNU General Public License for more details.
      *
      * You should have received a copy of the GNU General Public License
      * along with i5/OS Programmer's Toolkit.  If not, see <http://www.gnu.org/licenses/>.
      */

     /**
      * @file mih-dattim.rpgleinc
      *
      * Date/Time/Timestamp instructions.
      */

      /if not defined(i5toolkit_rpg_mih_dattim)
      /define i5toolkit_rpg_mih_dattim

     /* SAA DDAT without era table and calenday table */
     d saa_ddat1_t     ds            36    qualified
     d                                     based(dummy_ptr)
     d                                5u 0
     d     fmt_code                   5u 0
     d     date_sep                   1a
     d     time_sep                   1a
      * timezone definitions
     d     hour_time_zone...
     d                                5u 0
     d     minute_time_zone...
     d                                5u 0
      * duration definitions
     d     month_def                  5u 0
     d     year_def                   5u 0
      * century definitions
     d     current_century...
     d                               10u 0
     d     century_division...
     d                               10u 0
     d     calendar_table_offset...
     d                               10u 0
     d                                6a
     d saa_ddat1_len   c                   36

     /* SAA DDAT with era table and calenday table */
     d saa_ddat2_t     ds           116    qualified
     d                                     based(dummy_ptr)
     d                                5u 0
     d     fmt_code                   5u 0
     d     date_sep                   1a
     d     time_sep                   1a
      * timezone definitions
     d     hour_time_zone...
     d                                5u 0
     d     minute_time_zone...
     d                                5u 0
      * duration definitions
     d     month_def                  5u 0
     d     year_def                   5u 0
      * century definitions
     d     current_century...
     d                               10u 0
     d     century_division...
     d                               10u 0
     d     calendar_table_offset...
     d                               10u 0
     d                                6a
      * era table. SAA DDAT has only one era table
     d     era_table_elements...
     d                                5u 0
     d     era_origin_date...
     d                               10u 0
     d     era_name...
     d                               32a
     d                               12a
      * calendar table
     d     calendar_table_elements...
     d                                5u 0
     d     gregorian_effective_date...
     d                               10u 0
     d     gregorain_calendar_type...
     d                                5u 0
     d                               10a
     d     null_effective_date...
     d                               10u 0
     d     null_calendar_type...
     d                                5u 0
     d                               10a
     d saa_ddat2_len   c                   116
     d saa_ddat2_caltbl_offset...
     d                 c                   82
     d saa_origine_date...
     d                 c                   1721426
     d saa_era_name    c                   'AD, anno Domini'
     d gregorian_end_date...
     d                 c                   5373485
     d null_calendar_type...
     d                 c                   x'0000'
     d gregorian_calendar_type...
     d                 c                   x'0001'
     d julian_calendar_type...
     d                 c                   x'0002'

     /*
      * compute-duration instruction template for
      * instruction CDD, CTD, and CTSD.
      */
     d dt_compute_duration_tmpl_t...
     d                 ds                  qualified
     d                                     based(dummy_ptr)
     d     tmpl_size                 10u 0
     d     op1_ddat_index...
     d                                5u 0
     d     op2_ddat_index...
     d                                5u 0
     d     op3_ddat_index...
     d                                5u 0
     d                                2a
     d     op2_length                 5u 0
     d     op3_length                 5u 0
     d                               26a
      * DDAT list
     d     ddat_list_len...
     d                               10u 0
     d     ddats                      5u 0
     d                               10a
      * DDAT offsets of type ubin(4)
     d     ddat_offsets...
     d                               10u 0 dim(256)
      * DDATs
     d datetime_ddat_list_offset...
     d                 c                   42

     /**
      * @BIF _CDD (Compute Date Duration (CDD))
      */
     d cdd             pr                  extproc('_CDD')
      * address of a pkd(8,0) scalar
     d     date_duration...
     d                                 *   value
      * address of end-date
     d     date1                       *   value
      * address of begin-date
     d     date2                       *   value
      * instruction template
     d     inst_tmpl                       likeds(
     d                                       dt_compute_duration_tmpl_t)

     /**
      * @BIF _CTD (Compute Time Duration (CTD))
      */
     d ctd             pr                  extproc('_CTD')
      * address of a pkd(8,0) scalar
     d     time_duration...
     d                                 *   value
      * address of end-time
     d     time1                       *   value
      * address of begin-time
     d     time2                       *   value
      * instruction template
     d     inst_tmpl                       likeds(
     d                                       dt_compute_duration_tmpl_t)

      /if defined(*V5R4M0)
     /* materialization template of UTC TOD clock for MATTODAT */
     d mattodat_utc_clock_t...
     d                 ds                  qualified
     d     bytes_in                  10i 0
     d     bytes_out                 10i 0
     d                                8a
     d     time_of_day...
     d                                8a
     d     timezone_offset...
     d                               10i 0
     d                                4a
     d mattodat_utc_clock_len...
     d                 c                   32

     /* materialization template of TOD clock adjustment for MATTODAT */
     d mattodat_adjustment_t...
     d                 ds                  qualified
     d     bytes_in                  10i 0
     d     bytes_out                 10i 0
     d     adj_opt                    2a
     d                                6a
      * Time interval is a time value which specifies the remaining
      * amount of time by which the time-of-day clock will be
      * increased or decreased.
     d time_interval...
     d                                8a
      * Adjustment duration is a time value which provides an estimate
      * of the amount of time required in order to complete the
      * time-of-day clock adjustment.
     d adj_duration...
     d                                8a
     d mattodat_adjustment_len...
     d                 c                   32

     /**
      * @BIF _MATTODAT (Materialize Time of Day Clock Attributes (MATTODAT))
      *
      * @return 0 upon successful completion, otherwise an error number
      * incicates the corresponding error condition.
      */
     d mattodat        pr            10i 0 extproc('_MATTODAT')
     d     attr                        *   value
     d     selection                 10u 0 value
      /endif

      /endif
