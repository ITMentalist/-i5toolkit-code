     /**
      * This file is part of i5/OS Programmer's Toolkit.
      *
      * Copyright (C) 2010  Junlei Li.
      *
      * i5/OS Programmer's Toolkit is free software: you can redistribute it and/or modify
      * it under the terms of the GNU General Public License as published by
      * the Free Software Foundation, either version 3 of the License, or
      * (at your option) any later version.
      *
      * i5/OS Programmer's Toolkit is distributed in the hope that it will be useful,
      * but WITHOUT ANY WARRANTY; without even the implied warranty of
      * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      * GNU General Public License for more details.
      *
      * You should have received a copy of the GNU General Public License
      * along with i5/OS Programmer's Toolkit.  If not, see <http://www.gnu.org/licenses/>.
      */

     /**
      * @file mih54.rpgleinc
      *
      * Header of system builtins for ILE RPG provided by the
      * open-source project i5/OS Programmer's Toolkit.
      * For details please refer to the project's web site,
      * http://i5toolkit.sourceforge.net/
      *
      * @attention This header is for i5/OS Release 5 Version 4 or higher.
      */

      /if not defined(i5toolkit_rpg_mih54)
      /define i5toolkit_rpg_mih54

      /copy mih52

     /* MPYADD, multiply-add */
     d mpyadd          pr             8f   extproc('_MPYADD')
     d   multiplicand                 8f   value
     d   multiplier                   8f   value
     d   addend                       8f   value

     /* MPYSUB, multiply-sub */
     d mpysub          pr             8f   extproc('_MPYSUB')
     d   multiplicand                 8f   value
     d   multiplier                   8f   value
     d   addend                       8f   value

     /**
      * CALLPGMV
      *
      * call program with variable length argument list
      */
     d callpgmv        pr                  extproc('_CALLPGMV')
     d     pgm_ptr                     *
     d     argv                        *   dim(1) options(*varsize)
     d     argc                      10u 0 value

     /* materialization template of TOD clock adjustment for MATTODAT */
     d mattodat_adjustment_t...
     d                 ds                  qualified
     d     bytes_in                  10i 0
     d     bytes_out                 10i 0
     d     adj_opt                    2a
     d                                6a
      * Time interval is a time value which specifies the remaining
      * amount of time by which the time-of-day clock will be
      * increased or decreased.
     d time_interval...
     d                                8a
      * Adjustment duration is a time value which provides an estimate
      * of the amount of time required in order to complete the
      * time-of-day clock adjustment.
     d adj_duration...
     d                                8a
     d mattodat_adjustment_len...
     d                 c                   32

     /**
      * MATTODAT, materialize time of day clock attributes
      *
      * @return 0 upon successful completion, otherwise an error number
      * incicates the corresponding error condition.
      */
     d mattodat        pr            10i 0 extproc('_MATTODAT')
     d     attr                        *   value
     d     selection                 10u 0 value

     /* Shared storage synchronization */

     /**
      * ATMCADD, atomic add 4-byte singed binary value.
      *
      * @return original value of sum_addend
      */
     d atmcadd4        pr            10i 0 extproc('_ATMCADD4')
     d     sum_addend                10i 0
     d     augend                    10i 0 value

     /* ATMCADD, atomic add 8-byte singed binary value. */
     d atmcadd8        pr            20i 0 extproc('_ATMCADD8')
     d     sum_addend                20i 0
     d     augend                    20i 0 value

     /**
      * ATMCAND, atomic and 4-byte unsinged binary value.
      *
      * @return original value of op1
      */
     d atmcand4        pr            10u 0 extproc('_ATMCAND4')
     d     op1                       10u 0
     d     mask                      10u 0 value

     /* ATMCAND, atomic and 8-byte unsinged binary value. */
     d atmcand8        pr            20u 0 extproc('_ATMCAND8')
     d     op1                       20u 0
     d     mask                      20u 0 value

     /**
      * ATMCOR, atomic or 4-byte unsinged binary value.
      *
      * @return original value of op1
      */
     d atmcor4         pr            10u 0 extproc('_ATMCOR4')
     d     op1                       10u 0
     d     mask                      10u 0 value

     /* ATMCOR, atomic or 8-byte unsinged binary value. */
     d atmcor8         pr            20u 0 extproc('_ATMCOR8')
     d     op1                       20u 0
     d     mask                      20u 0 value

     /* pointer resolution */

     /**
      * _RETTSADR (Retrieve Teraspace Address From Space Pointer)
      *
      * @remark instruction may be specified in a program template
      *         only when the (bound) program is to be created as
      *         teraspace capable. So to use _RETTSADR in ILE RPG you
      *         need to have a 7.1 machine. For an ILE C example,
      *         refer to test/t084.c
      */
     d rettsadr        pr             8a   extproc('_RETTSADR')
     d     spc_ptr                     *   value

     /* end -- pointer resolution */

     /**
      * CHKLKVAL, check lock value
      *
      * @remark CHKLKVAL and CLRLKVAL are available since V5R3
      */
     d chklkval        pr            10i 0 extproc('_CHKLKVAL')
     d     lock                      20i 0
     d     old_val                   20i 0 value
     d     new_val                   20i 0 value

     /* CLRKLVAL, check lock value */
     d clrlkval        pr                  extproc('_CLRLKVAL')
     d     lock                      20i 0
     d     new_val                   20i 0 value

     /* SYNCSTG, synchronize shared storage access */
     d syncstg         pr                  extproc('_SYNCSTG')
     d     action                    10u 0 value

     /* end -- Shared storage synchronization */

      /endif
     /* eof - mih54.rpgleinc */
