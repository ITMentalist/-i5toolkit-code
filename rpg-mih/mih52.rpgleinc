     /**
      * This file is part of i5/OS Programmer's Toolkit.
      *
      * Copyright (C) 2009  Junlei Li.
      *
      * i5/OS Programmer's Toolkit is free software: you can redistribute it and/or modify
      * it under the terms of the GNU General Public License as published by
      * the Free Software Foundation, either version 3 of the License, or
      * (at your option) any later version.
      *
      * i5/OS Programmer's Toolkit is distributed in the hope that it will be useful,
      * but WITHOUT ANY WARRANTY; without even the implied warranty of
      * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
      * GNU General Public License for more details.
      *
      * You should have received a copy of the GNU General Public License
      * along with i5/OS Programmer's Toolkit.  If not, see <http://www.gnu.org/licenses/>.
      */

     /**
      * @file mih52.rpgleinc
      *
      * Header of system builtins for ILE RPG provided by the
      * open-source project i5/OS Programmer's Toolkit.
      * For details please refer to the project's web site,
      * http://i5toolkit.sourceforge.net/
      *
      * @attention This header is for i5/OS Release 5 Version 2.
      */

      /if not defined(i5toolkit_rpg_mih52)
      /define i5toolkit_rpg_mih52

      /if defined(*CRTBNDRPG)
     h dftactgrp(*no)
      /endif

     /* calculation builtins */

     /* ACOS */
     d acos            pr             8f   extproc('_ACOS')
     d     x                          8f   value

     /* ANDCSTR: And Complemented String */
     d andcstr         pr                  extproc('_ANDCSTR')
     d     receiver               32767a   options(*varsize)
     d     str1                   32767a   options(*varsize)
     d     str2                   32767a   options(*varsize)
     d     length                    10u 0 value

     /* ANDSTR: and string */
     d andstr          pr                  extproc('_ANDSTR')
     d     receiver               32767a   options(*varsize)
     d     str1                   32767a   options(*varsize)
     d     str2                   32767a   options(*varsize)
     d     length                    10u 0 value

     /* ASIN */
     d asin            pr             8f   extproc('_ASIN')
     d     x                          8f   value

     /* ATAN */
     d atan            pr             8f   extproc('_ATAN')
     d     x                          8f   value

     /* ATANH, arc tangent hyperbolic */
     d atanh           pr             8f   extproc('_ATANH')
     d     x                          8f   value

     /* STRLENNULL, compute length of null-terminated string */
     d strlennull      pr            10u 0 extproc('__strlen')
     d     str                    32767a   options(*varsize)

     /* STRLENNULL, compare null-terminated strings */
     d strcmpnull      pr            10i 0 extproc('__strcmp')
     d     str1                   32767a   options(*varsize)
     d     str2                   32767a   options(*varsize)

     /* STRNCMPNULL, compare null-terminated strings constrained */
     d strncmpnull     pr            10i 0 extproc('_STRNCMPNULL')
     d     str1                   32767a   options(*varsize)
     d     str2                   32767a   options(*varsize)
     d     length                    10u 0 value

     /* CMPTOPAD, compare to pad */
     d cmptopad        pr            10i 0 extproc('_CMPTOPAD')
     d     str                    32767a   options(*varsize)
     d     pad                        1a   value
     d     length                    10u 0 value

     /* COMSTR, complement string */
     d comstr          pr                  extproc('_COMSTR')
     d     receiver               32767a   options(*varsize)
     d     source                 32767a   options(*varsize)
     d     length                    10u 0 value

     /* end -- calculation builtins */

     /* pointer resolution */
     d rslvsp_tmpl     ds                  qualified
     d     obj_type                   2a
     d     obj_name                  30a
     d     auth                       2a   inz(x'0000')

     d rslvsp2         pr                  extproc('_RSLVSP2')
     d     obj                         *
     d     opt                       34a


     /* end -- pointer resolution */

      /endif
     /* eof - mih52.rpgleinc */
