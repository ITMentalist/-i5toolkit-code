/**
 * @file enqusrq.mi
 *
 * Commnd processing program of CL command enqusrq
 */
        
dcl spcptr .q-object parm       ; 
dcl spcptr .key-data parm       ; 
dcl spcptr .msg-text parm       ;
dcl spcptr .msg-text-len parm   ; 

dcl ol pl-main (
        .q-object,
        .key-data,
        .msg-text,
        .msg-text-len
) parm ext;

entry i-main(pl-main) ext       ;

dcl dd q-name char(10) bas(.q-object) ; 
dcl dd q-lib char(10) bas(.q-object) pos(11);

dcl dd input-key-length bin(2) bas(.key-data) ;
dcl dd input-key char(1) bas(.key-data) pos(3);

dcl dd input-msg-length bin(2) bas(.msg-text) ;
dcl dd input-msg char(1) bas(.msg-text) pos(3);
dcl spcptr input-msg-ptr auto   ; 

dcl dd msg-text-len pkd(5, 0) bas(.msg-text-len) ; 
dcl sysptr q auto                ;

brk "INIT"                      ; 
        /* resolve usrq */
dcl sysptr ctx auto             ; 
dcl dd q-obj-type char(2) auto init(x"0A02") ; 
        cpyblap rslv-option-obj-name, q-name, " " ; 
        cmpbla(b) q-lib, "*CURLIB" / eq(resolve-q);
        cmpbla(b) q-lib, "*LIBL" / eq(resolve-q);
        cpybla rslv-option-obj-type, x"0401";
        cpyblap rslv-option-obj-name, q-lib, " ";
        rslvsp ctx, rslv-option-short, *, x'0000';
        cpybla rslv-option-obj-type, q-obj-type ; 
        cpyblap rslv-option-obj-name, q-name, " ";
        rslvsp q, rslv-option-short, ctx, x'0000';
        b end-resolve;
resolve-q:
        cpybla rslv-option-obj-type, q-obj-type ; 
        cpyblap rslv-option-obj-name, q-name, " ";
        rslvsp q, rslv-option-short, *, x'0000';
end-resolve:

brk "MATQAT"                    ; 
        cpynv matqat-bytes-in, MATQAT-TEMPLATE-LEN ; 
        matqat .matqat-template, q ; 

        /* prepare enqueue prefix */
dcl dd enq-prefix char(260) auto;
        dcl dd enq-msg-len bin(4) def(enq-prefix) pos(1) ;
        dcl dd enq-key char(256) def(enq-prefix) pos(5) ;

        cpynv enq-msg-len, msg-text-len ;

        /* set enq-key */
dcl dtaptr key-ptr auto         ;
        setdp key-ptr, input-key; 

dcl dd dtaptr-attr char(7) auto ;
        dcl dd * char(1) def(dtaptr-attr) init(x"04") ;
        dcl dd dtaptr-attr-length bin(2) def(dtaptr-attr) pos(2) ;

        cpynv dtaptr-attr-length, matqat-key-len ;
        setdpat key-ptr, dtaptr-attr ;
        cpybla enq-key, key-ptr ; 

brk "ENQ"                       ;
        setspp input-msg-ptr, input-msg ; 
        enq q, enq-prefix, input-msg-ptr ; 

brk "END"                       ;
        rtx *                   ;

/* template for MATQAT */        
dcl dd matqat-template-buf char(128) auto bdry(16);
dcl spcptr .matqat-template auto init(matqat-template-buf);
dcl spc matqat-template-t bas(.matqat-template);
        dcl dd matqat-bytes-in bin(4) dir;
        dcl dd matqat-bytes-out bin(4) dir;
        dcl dd matqat-obj-types char(2) dir;
        dcl dd matqat-obj-name char(30) dir;
        dcl dd matqat-create-options char(4) dir;
        dcl dd * char(4) dir;
        dcl dd matqat-space-size bin(4) dir;
        dcl dd matqat-init-value char(1) dir;
        dcl dd matqat-performance-class char(4) dir;
        dcl dd * char(7) dir;
        dcl sysptr matqat-ctx dir;
        dcl sysptr matqat-accgrp dir;
        dcl dd matqat-q-attr char(1) dir;
        dcl dd matqat-cur-max-msgs bin(4) dir;
        dcl dd matqat-cur-msg-num bin(4) dir;
        dcl dd matqat-extension-value bin(4) dir;
        dcl dd matqat-key-len bin(2) dir;
        dcl dd matqat-max-msg-size bin(4) dir; /* 指被入列的message的最大长度 */
        dcl dd * char(1) dir;
        dcl dd matqat-max-extend-num bin(4) dir;
        dcl dd matqat-cur-extend-num bin(4) dir;
        dcl dd matqat-init-msg-num bin(4) dir;
dcl con MATQAT-TEMPLATE-LEN bin(4) init(128) ;

%include ptrres.mi              ; 

pend;
/* eof - enqusrq.mi */
