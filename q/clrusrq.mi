/**
 * @file clrusrq.mi
 *
 * usage demo: call clrusrq parm('Q_NAME     Q_LIB')
 * @remark make sure that the target USRQ is in your library list
 */

dcl spcptr .q-object parm         ; 
dcl ol pl-main(
        .q-object
) parm ext                        ; 
entry i-main(pl-main) ext       ; 

dcl dd q-name char(10) bas(.q-object) ; 
dcl dd q-lib  char(10) bas(.q-object) pos(11) ; 
dcl sysptr q auto                ; 

brk "0"                                ; 
        /* resolve usrq */
dcl sysptr ctx auto             ; 
dcl dd q-obj-type char(2) auto init(x"0A02") ; 
        cpyblap rslv-option-obj-name, q-name, " " ; 
        cmpbla(b) q-lib, "*CURLIB" / eq(resolve-q);
        cmpbla(b) q-lib, "*LIBL" / eq(resolve-q);
        cpybla rslv-option-obj-type, x"0401";
        cpyblap rslv-option-obj-name, q-lib, " ";
        rslvsp ctx, rslv-option-short, *, x'0000';
        cpybla rslv-option-obj-type, q-obj-type ; 
        cpyblap rslv-option-obj-name, q-name, " ";
        rslvsp q, rslv-option-short, ctx, x'0000';
        b end-resolve;
resolve-q:
        cpybla rslv-option-obj-type, q-obj-type ; 
        cpyblap rslv-option-obj-name, q-name, " ";
        rslvsp q, rslv-option-short, *, x'0000';
end-resolve:

brk "MATQAT"                    ; 
        /* get q attributes */
        cpynv matqat-bytes-in, MATQAT-TEMPLATE-LEN ; 
        matqat .matqat-template, q ; 
brk "ALLOC"                     ; 
        /* allocate prefix and text */
dcl dd text-len bin(4) auto        ; 
dcl dd prefix-len bin(4) auto        ; 
dcl con MIN-PREFIX-LEN bin(4) init(21) ; 
dcl dd prefix char(32767) bas(*)   ; 
dcl spcptr prefix-ptr auto      ; 
dcl dd text char(21) bas(*)  ; 
dcl spcptr text-ptr auto        ; 

        mult prefix-len, matqat-key-len, 2 ;
        addn(s) prefix-len, MIN-PREFIX-LEN ;
        modasa prefix-ptr, prefix-len ; 
        modasa text-ptr, matqat-max-msg-size ; 

        /* deq looply */
dcl spc prefix-t bas(prefix-ptr);
        dcl dd time-enqueued char(8) dir ;
        dcl dd deq-timeout char(8) dir ;
        dcl dd rtn-msg-size bin(4) dir ;
        dcl dd mod-acc-sts-opt char(1) dir ; 

        /* 1100,1010, GE */
        cpybla mod-acc-sts-opt, x"CA" ; 
        /* clear search key */
        calli clear-search-key, *, .clear-search-key ; 
deq-loop:       
brk "DEQ"                       ; 
        deq(b) prefix-ptr->prefix,
                text-ptr,
                q / eq(deq-loop), neq(end-deq-loop) ; 
end-deq-loop:   
brk "END"                       ; 
        rtx *                   ; 

/**
 * clear search key
 *
 * @pre prefix-ptr
 * @pre matqat-key-len
 *
 * @post search key portion of prefix
 */
dcl insptr .clear-search-key auto ; 
entry clear-search-key int      ;

dcl dd index bin(4) auto        ;
dcl spcptr search-key-ptr auto  ;
dcl dd ch1 char(1) bas(*)       ; 

        setsppfp search-key-ptr, prefix-ptr ;
        addspp search-key-ptr, search-key-ptr, 21 ;

        cpynv index, 0          ;
clear-key-loop:
        addn(s) index, 1        ;
        cmpnv(b) index, matqat-key-len / hi(end-clear-key-loop) ;

        cpybla search-key-ptr->ch1, x"00" ; 
        addspp search-key-ptr, search-key-ptr, 1 ;
        b clear-key-loop        ; 
end-clear-key-loop:     

        b .clear-search-key     ; 
        
/* template for MATQAT */        
dcl dd matqat-template-buf char(128) auto bdry(16);
dcl spcptr .matqat-template auto init(matqat-template-buf);
dcl spc matqat-template-t bas(.matqat-template);
        dcl dd matqat-bytes-in bin(4) dir;
        dcl dd matqat-bytes-out bin(4) dir;
        dcl dd matqat-obj-types char(2) dir;
        dcl dd matqat-obj-name char(30) dir;
        dcl dd matqat-create-options char(4) dir;
        dcl dd * char(4) dir;
        dcl dd matqat-space-size bin(4) dir;
        dcl dd matqat-init-value char(1) dir;
        dcl dd matqat-performance-class char(4) dir;
        dcl dd * char(7) dir;
        dcl sysptr matqat-ctx dir;
        dcl sysptr matqat-accgrp dir;
        dcl dd matqat-q-attr char(1) dir;
        dcl dd matqat-cur-max-msgs bin(4) dir;
        dcl dd matqat-cur-msg-num bin(4) dir;
        dcl dd matqat-extension-value bin(4) dir;
        dcl dd matqat-key-len bin(2) dir;
        dcl dd matqat-max-msg-size bin(4) dir; /* 指被入列的message的最大长度 */
        dcl dd * char(1) dir;
        dcl dd matqat-max-extend-num bin(4) dir;
        dcl dd matqat-cur-extend-num bin(4) dir;
        dcl dd matqat-init-msg-num bin(4) dir;
dcl con MATQAT-TEMPLATE-LEN bin(4) init(128) ;

%include ptrres.mi              ; 

pend                            ; 
/* eof - clrusrq.mi */
