/**
 * This file is part of i5/OS Programmer's Toolkit.
 * 
 * Copyright (C) 2010, 2011  Junlei Li (李君磊).
 * 
 * i5/OS Programmer's Toolkit is free software: you can redistribute
 * it and/or modify it under the terms of the GNU General Public
 * License as published by the Free Software Foundation, either
 * version 3 of the License, or (at your option) any later version.
 *
 * i5/OS Programmer's Toolkit is distributed in the hope that it will
 * be useful, but WITHOUT ANY WARRANTY; without even the implied
 * warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with i5/OS Programmer's Toolkit.  If not, see
 * <http://www.gnu.org/licenses/>.
 */

/**
 * @file pixels.java
 *
 * Extracts ARGB values of pixels in a image file (JPEG, GIF, or PNG),
 * and generate corresponding subclass of ImagePixels.
 */

import java.io.*;
import java.awt.image.*; // BufferedImage
import javax.imageio.*;  // ImageIO

public class pixels {

    public static void main(String[] args) {

        if(args.length == 0) {
            System.out.println("Usage: java pixels image-file-path [name-of-AS3-class] [name-of-AS3-package]");
            System.out.println("e.g. java pixels house.png House org.someproject.assets");
            System.exit(0);
        }

        try {

            String img_path = args[0];
            String as_class = "pixels";
            if(args.length > 1)
                as_class = args[1];
            String as_class_path = as_class + ".as";
            String as_package = "";
            if(args.length > 2)
                as_package = args[2];

            File f = new File(img_path);
            BufferedImage img = ImageIO.read(f);
            int w = img.getWidth();
            int h = img.getHeight();

            System.out.println("Image size: "
                               + w
                               + " X "
                               + h);

            // output to AS3 class file
            FileOutputStream out = new FileOutputStream(new File(as_class_path));
            String NL = "\n";  // new line character
            out.write(new String("/**" + NL
                                 + " * @file " + as_class_path + NL
                                 + " * This file is generated by pixels.java" + NL
                                 + " */" + NL
                                 + NL
                                 + "package " + as_package +" {" + NL
                                 + NL
                                 + "    import flash.display.*;" + NL
                                 + "    // import tool.image.ImagePixels; // I need to see the base class of classes generated by pixels.java, ImagePixels" + NL
                                 + NL
                                 + "    public class " + as_class + " extends ImagePixels {" + NL
                                 + NL
                                 + "        public function " + as_class + "() {" + NL
                                 + "            width_ = " + w + ";" + NL
                                 + "            height_ = " + h + ";" + NL
                                 + "pixels_ = new <int>[" + NL
                                 ).getBytes());

            int i = 0, j = 0, color = 0;
            byte b1 = 0, b2 = 0, b3 = 0, b4 = 0;
            // output pixel array
            int pos = 1;
            int num_pixels = w * h;
            for(i = 0; i < w; i++) {
                for(j = 0; j < h; j++, pos++) {
                    color = img.getRGB(i, j);
                    if(pos >= num_pixels)
                        out.write(new String(color + "").getBytes());
                    else
                        out.write(new String(color + ", ").getBytes());
                    if((pos % 8) == 0)
                        out.write(NL.getBytes());
                }
            }
            out.write(new String("                                ];" + NL
                                 + "        } // ctor()" + NL
                                 + "    } // class " + as_class + NL
                                 + "} // EOF" + NL
                                 ).getBytes());

        } catch(Exception e) {
            e.printStackTrace();
        }

    }

}
